<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="7" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="91861" started-at="2022-04-27T09:10:31Z" finished-at="2022-04-27T09:12:03Z">
    <groups>
    </groups>
    <test name="Testng" duration-ms="91861" started-at="2022-04-27T09:10:31Z" finished-at="2022-04-27T09:12:03Z">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.LoginTest@3aefe5e5]" name="setup" is-config="true" duration-ms="2436" started-at="2022-04-27T09:11:58Z" finished-at="2022-04-27T09:12:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="loginFailed()[pri:1, instance:tests.LoginTest@3aefe5e5]" name="loginFailed" duration-ms="1441" started-at="2022-04-27T09:12:01Z" description="Test incorect login information" finished-at="2022-04-27T09:12:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Sorry, either your username or password was incorrect] but found [Sorry, either your username or password was incorrect.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Sorry, either your username or password was incorrect] but found [Sorry, either your username or password was incorrect.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at tests.LoginTest.loginFailed(LoginTest.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginFailed -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3aefe5e5]" name="failedTest" is-config="true" duration-ms="179" started-at="2022-04-27T09:12:02Z" finished-at="2022-04-27T09:12:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginFailed status=FAILURE method=LoginTest.loginFailed()[pri:1, instance:tests.LoginTest@3aefe5e5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginTest@3aefe5e5]" name="tearDown" is-config="true" duration-ms="608" started-at="2022-04-27T09:12:02Z" finished-at="2022-04-27T09:12:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.ViewMyFormsTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.ViewMyFormsTest@47d90b9e]" name="setup" is-config="true" duration-ms="3602" started-at="2022-04-27T09:10:31Z" finished-at="2022-04-27T09:10:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="dropDownFail()[pri:0, instance:tests.ViewMyFormsTest@47d90b9e]" name="dropDownFail" duration-ms="9639" started-at="2022-04-27T09:10:35Z" finished-at="2022-04-27T09:10:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dropDownFail -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.ViewMyFormsTest@47d90b9e]" name="failedTest" is-config="true" duration-ms="1" started-at="2022-04-27T09:10:44Z" finished-at="2022-04-27T09:10:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dropDownFail status=SUCCESS method=ViewMyFormsTest.dropDownFail()[pri:0, instance:tests.ViewMyFormsTest@47d90b9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.ViewMyFormsTest@47d90b9e]" name="tearDown" is-config="true" duration-ms="637" started-at="2022-04-27T09:10:44Z" finished-at="2022-04-27T09:10:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ViewMyFormsTest -->
      <class name="tests.SearchAllTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.SearchAllTest@149e0f5d]" name="setup" is-config="true" duration-ms="2394" started-at="2022-04-27T09:10:45Z" finished-at="2022-04-27T09:10:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="isDisplayed()[pri:0, instance:tests.SearchAllTest@149e0f5d]" name="isDisplayed" duration-ms="29499" started-at="2022-04-27T09:10:47Z" description="Checks if message is desplayed" finished-at="2022-04-27T09:11:17Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#MessageLabel"}
  (Session info: chrome=100.0.4896.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'MP1ZNVJ4', ip: '192.168.67.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c77ff41ad48b77f7622573355204042d, findElement {using=css selector, value=#MessageLabel}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.127, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\Owner\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52486}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52486/devtoo..., se:cdpVersion: 100.0.4896.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c77ff41ad48b77f7622573355204042d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#MessageLabel"}
  (Session info: chrome=100.0.4896.127)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'MP1ZNVJ4', ip: '192.168.67.116', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c77ff41ad48b77f7622573355204042d, findElement {using=css selector, value=#MessageLabel}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.127, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\Owner\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52486}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52486/devtoo..., se:cdpVersion: 100.0.4896.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: c77ff41ad48b77f7622573355204042d
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy13.isDisplayed(Unknown Source)
at PageObject.SearchAllPage.isMsgDisplayed(SearchAllPage.java:37)
at tests.SearchAllTest.isDisplayed(SearchAllTest.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isDisplayed -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.SearchAllTest@149e0f5d]" name="failedTest" is-config="true" duration-ms="172" started-at="2022-04-27T09:11:17Z" finished-at="2022-04-27T09:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isDisplayed status=FAILURE method=SearchAllTest.isDisplayed()[pri:0, instance:tests.SearchAllTest@149e0f5d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.SearchAllTest@149e0f5d]" name="tearDown" is-config="true" duration-ms="642" started-at="2022-04-27T09:11:17Z" finished-at="2022-04-27T09:11:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SearchAllTest -->
      <class name="tests.AccountTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.AccountTest@2f7c2f4f]" name="setup" is-config="true" duration-ms="2418" started-at="2022-04-27T09:11:44Z" finished-at="2022-04-27T09:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="isExist()[pri:0, instance:tests.AccountTest@2f7c2f4f]" name="isExist" duration-ms="10662" started-at="2022-04-27T09:11:47Z" description="Checks if the update state exist" finished-at="2022-04-27T09:11:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isExist -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.AccountTest@2f7c2f4f]" name="failedTest" is-config="true" duration-ms="1" started-at="2022-04-27T09:11:58Z" finished-at="2022-04-27T09:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isExist status=SUCCESS method=AccountTest.isExist()[pri:0, instance:tests.AccountTest@2f7c2f4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.AccountTest@2f7c2f4f]" name="tearDown" is-config="true" duration-ms="625" started-at="2022-04-27T09:11:58Z" finished-at="2022-04-27T09:11:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AccountTest -->
      <class name="tests.SpecificFormPageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.SpecificFormPageTest@1184ab05]" name="setup" is-config="true" duration-ms="2435" started-at="2022-04-27T09:11:18Z" finished-at="2022-04-27T09:11:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="currentPage()[pri:0, instance:tests.SpecificFormPageTest@1184ab05]" name="currentPage" duration-ms="17236" started-at="2022-04-27T09:11:20Z" description="This test checks page&#039;s title" finished-at="2022-04-27T09:11:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- currentPage -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.SpecificFormPageTest@1184ab05]" name="tearDown" is-config="true" duration-ms="627" started-at="2022-04-27T09:11:37Z" finished-at="2022-04-27T09:11:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.SpecificFormPageTest@1184ab05]" name="failedTest" is-config="true" duration-ms="0" started-at="2022-04-27T09:11:37Z" finished-at="2022-04-27T09:11:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=currentPage status=SUCCESS method=SpecificFormPageTest.currentPage()[pri:0, instance:tests.SpecificFormPageTest@1184ab05] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
      </class> <!-- tests.SpecificFormPageTest -->
      <class name="tests.ForgotPasswordTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.ForgotPasswordTest@1b1473ab]" name="setup" is-config="true" duration-ms="2621" started-at="2022-04-27T09:11:38Z" finished-at="2022-04-27T09:11:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="isRestoreAvailable()[pri:0, instance:tests.ForgotPasswordTest@1b1473ab]" name="isRestoreAvailable" duration-ms="1873" started-at="2022-04-27T09:11:41Z" description="Checks if it&#039;s posible to restore forgotten details - message shall be appeared" finished-at="2022-04-27T09:11:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isRestoreAvailable -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.ForgotPasswordTest@1b1473ab]" name="failedTest" is-config="true" duration-ms="0" started-at="2022-04-27T09:11:42Z" finished-at="2022-04-27T09:11:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isRestoreAvailable status=SUCCESS method=ForgotPasswordTest.isRestoreAvailable()[pri:0, instance:tests.ForgotPasswordTest@1b1473ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="FAIL" signature="msgText()[pri:0, instance:tests.ForgotPasswordTest@1b1473ab]" name="msgText" duration-ms="1268" started-at="2022-04-27T09:11:42Z" description="Checks if it&#039;s posible to restore forgotten details - message shall be appeared" finished-at="2022-04-27T09:11:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [instructions on how to reset your password have been sent to the email address registered with the username provided.] but found [Instructions on how to reset your password have been sent to the email address registered with the username provided.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [instructions on how to reset your password have been sent to the email address registered with the username provided.] but found [Instructions on how to reset your password have been sent to the email address registered with the username provided.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at tests.ForgotPasswordTest.msgText(ForgotPasswordTest.java:30)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- msgText -->
        <test-method status="PASS" signature="failedTest(org.testng.ITestResult)[pri:0, instance:tests.ForgotPasswordTest@1b1473ab]" name="failedTest" is-config="true" duration-ms="186" started-at="2022-04-27T09:11:44Z" finished-at="2022-04-27T09:11:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=msgText status=FAILURE method=ForgotPasswordTest.msgText()[pri:0, instance:tests.ForgotPasswordTest@1b1473ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.ForgotPasswordTest@1b1473ab]" name="tearDown" is-config="true" duration-ms="629" started-at="2022-04-27T09:11:44Z" finished-at="2022-04-27T09:11:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ForgotPasswordTest -->
    </test> <!-- Testng -->
  </suite> <!-- Suite -->
</testng-results>
